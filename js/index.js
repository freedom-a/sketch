var sketch=angular.module('sketch',[]);
sketch.controller('sketchController',['$scope',function($scope){
		var 
		canvas=document.querySelector('#canvas'),
		ctx=canvas.getContext('2d'),
		current;
		var jietu=function(){
			current=ctx.getImageData(0,0,$scope.canvasWH.width,$scope.canvasWH.height);
		}
		$scope.canvasWH={width:600,height:600};
		$scope.tool='line';
		$scope.tools={
			'画圆':'arc',
			'画线':'line',
			'画矩形':'rect',
			'铅笔':'pen',
			'橡皮':'eraser'
		};
		$scope.csState={
           fillStyle:'#000000',
           strokeStyle:'#000000',
           lineWidth:'1',
           style:'stroke'
		};
		$scope.settool=function(tool){
			$scope.tool=tool;
		}
		$scope.setStyle=function(s){
			$scope.csState.style=s;
			console.log($scope.csState.style);
		};
		$scope.save=function(ev){
			ev.srcElement.href=canvas.toDataURL();
		    ev.srcElement.download="mypainting.png";
		}
		$scope.newsketch=function(){
			if(current){
				if(confirm('是否保存','')){
					location.href=canvas.toDataURL();
				}
			}
			ctx.clearRect(0,0,$scope.canvasWH.width,$scope.canvasWH.height);
			current=null;
			}
		var setmousemove={
			line:function(e){
				canvas.onmousemove=function(ev){
					ctx.clearRect(0,0,$scope.canvasWH.width,$scope.canvasWH.height);
					if(current){
						ctx.putImageData(current,0,0);
					}
					ctx.beginPath();
					ctx.moveTo(e.offsetX,e.offsetY);
			        ctx.lineTo(ev.offsetX,ev.offsetY);
			        ctx.stroke();
				}
			},
			arc:function(e){
				canvas.onmousemove=function(ev){
					ctx.clearRect(0,0,$scope.canvasWH.width,$scope.canvasWH.height);
					if(current){
							ctx.putImageData(current,0,0);
						}
					ctx.beginPath();
					var r=Math.abs(ev.offsetX-e.offsetX)
		            ctx.arc(e.offsetX,e.offsetY,r,0,Math.PI*2);
		            if($scope.csState.style=='fill'){
		            	ctx.fill();
		            }else{
		            	ctx.stroke();
		            }
				}
			},
			rect:function(e){
				canvas.onmousemove=function(ev){
					ctx.clearRect(0,0,$scope.canvasWH.width,$scope.canvasWH.height);
					if(current){
							ctx.putImageData(current,0,0);
						}
					ctx.beginPath();
					var w=ev.offsetX-e.offsetX;
					var h=ev.offsetY-e.offsetY;
		            if($scope.csState.style=='fill'){
		            	ctx.fillRect(e.offsetX,e.offsetY,w,h);
		            }else{
		            	ctx.strokeRect(e.offsetX,e.offsetY,w,h);
		            }
				}
			},
			pen:function(e){
					ctx.beginPath();
					ctx.moveTo(e.offsetX,e.offsetY);
					canvas.onmousemove=function(ev){
						ctx.clearRect(0,0,$scope.canvasWH.width,$scope.canvasWH.height);
						if(current){
							ctx.putImageData(current,0,0);
						}
				        ctx.lineTo(ev.offsetX,ev.offsetY);
				        ctx.stroke();
					}
			},
			eraser:function(e){
				canvas.onmousemove=function(ev){
					ctx.clearRect(e.offsetX,e.offsetY,ev.offsetX,ev.offsetY);
				}
			}
		}
		canvas.onmousedown=function(e){
			ctx.fillStyle=$scope.csState.fillStyle;
			ctx.strokeStyle=$scope.csState.strokeStyle;
			ctx.lineWidth=$scope.csState.lineWidth;
			setmousemove[$scope.tool](e);
			document.onmouseup=function(){
				canvas.onmousemove=null;
				document.onmouseup=null;
			}
			jietu();
		}

}])
